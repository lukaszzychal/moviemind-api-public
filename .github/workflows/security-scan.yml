name: GitLeaks Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  gitleaks:
    name: GitLeaks Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0  # Fetch all history for better detection
    
    - name: Run GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}
      with:
        config-path: .gitleaks.toml
        verbose: true
        redact: true
    
    - name: Upload GitLeaks results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: gitleaks-results
        path: gitleaks-results.json
        retention-days: 30

  # Additional security checks
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: gitleaks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_pgsql, redis
    
    - name: Install Composer dependencies
      working-directory: api
      run: composer install --no-dev --optimize-autoloader
    
    - name: Run security audit
      run: |
        # Check for known security vulnerabilities
        composer audit --format=json > security-audit.json || true
        
        # Display results
        if [ -f security-audit.json ]; then
          echo "Security audit results:"
          cat security-audit.json
        fi
    
    - name: Upload security audit results
      uses: actions/upload-artifact@v4
      with:
        name: security-audit-results
        path: security-audit.json
        retention-days: 30
