_type: export
__export_format: 4
__export_date: 2025-10-30T00:00:00.000Z
__export_source: insomnia.desktop.app:v2025.1.0
resources:
  - _id: wrk_moviemind
    _type: workspace
    name: MovieMind API
  - _id: env_base
    _type: environment
    parentId: wrk_moviemind
    name: Base Environment
    data:
      baseUrl: http://localhost:8000
      jobId: 7f9d5a7c-6e6c-4f3a-9c5b-3a7f9b8b1e2d
  - _id: fld_public
    _type: request_group
    parentId: wrk_moviemind
    name: Public
  - _id: req_movies_list
    _type: request
    parentId: fld_public
    name: Movies - List
    method: GET
    url: "{{ baseUrl }}/api/v1/movies?q=matrix"
    body: {}
    headers: []
    responses:
      - _id: res_movies_list
        _type: response
        status: 200
        body: |
          {"data":[{"id":1,"slug":"the-matrix","title":"The Matrix","release_year":1999,"director":"The Wachowskis"}]}
  - _id: req_movies_show
    _type: request
    parentId: fld_public
    name: Movies - Show (by slug)
    method: GET
    url: "{{ baseUrl }}/api/v1/movies/the-matrix"
    body: {}
    headers: []
    responses:
      - _id: res_movies_show
        _type: response
        status: 200
        body: |
          {"id":1,"slug":"the-matrix","title":"The Matrix","release_year":1999,"director":"The Wachowskis","default_description":{"id":10,"locale":"en-US","text":"A hacker discovers the truth about reality...","context_tag":"modern"}}
  - _id: req_people_show
    _type: request
    parentId: fld_public
    name: People - Show (by slug)
    method: GET
    url: "{{ baseUrl }}/api/v1/people/christopher-nolan"
    body: {}
    headers: []
    responses:
      - _id: res_people_show
        _type: response
        status: 200
        body: |
          {"id":123,"slug":"christopher-nolan","name":"Christopher Nolan","bios":[{"locale":"en-US","text":"Short bio..."}],"movies":[{"id":2,"slug":"inception","title":"Inception"}]}
  - _id: req_generate_movie
    _type: request
    parentId: fld_public
    name: Generate - MOVIE
    method: POST
    url: "{{ baseUrl }}/api/v1/generate"
    headers:
      - name: Content-Type
        value: application/json
    body:
      mimeType: application/json
      text: |
        {"entity_type":"MOVIE","entity_id":1,"locale":"pl-PL","context_tag":"modern"}
    responses:
      - _id: res_generate_movie
        _type: response
        status: 200
        body: |
          {"job_id":"7f9d5a7c-6e6c-4f3a-9c5b-3a7f9b8b1e2d","status":"PENDING"}
  - _id: req_jobs_show
    _type: request
    parentId: fld_public
    name: Jobs - Show
    method: GET
    url: "{{ baseUrl }}/api/v1/jobs/{{ jobId }}"
    body: {}
    headers: []
    responses:
      - _id: res_jobs_show
        _type: response
        status: 200
        body: |
          {"id":"7f9d5a7c-6e6c-4f3a-9c5b-3a7f9b8b1e2d","status":"PENDING"}
  - _id: req_missing_movie_202
    _type: request
    parentId: fld_public
    name: Movies - Show (missing slug => 202)
    method: GET
    url: "{{ baseUrl }}/api/v1/movies/annihilation"
    body: {}
    headers: []
    responses:
      - _id: res_missing_movie_202
        _type: response
        status: 202
        body: |
          {"job_id":"c6de4a2f-1111-2222-3333-abcdefabcdef","status":"PENDING","slug":"annihilation"}
  - _id: fld_admin
    _type: request_group
    parentId: wrk_moviemind
    name: Admin
  - _id: req_flags_list
    _type: request
    parentId: fld_admin
    name: Flags - List
    method: GET
    url: "{{ baseUrl }}/api/v1/admin/flags"
    body: {}
    headers: []
    responses:
      - _id: res_flags_list
        _type: response
        status: 200
        body: |
          {"flags":{"ai_description_generation":true,"ai_bio_generation":true}}
  - _id: req_flags_toggle_desc
    _type: request
    parentId: fld_admin
    name: Flags - Toggle ai_description_generation (on)
    method: POST
    url: "{{ baseUrl }}/api/v1/admin/flags/ai_description_generation"
    headers:
      - name: Content-Type
        value: application/json
    body:
      mimeType: application/json
      text: |
        {"state":"on"}
    responses:
      - _id: res_flags_toggle_desc
        _type: response
        status: 200
        body: |
          {"name":"ai_description_generation","state":"on"}
  - _id: req_flags_usage
    _type: request
    parentId: fld_admin
    name: Flags - Usage
    method: GET
    url: "{{ baseUrl }}/api/v1/admin/flags/usage"
    body: {}
    headers: []
    responses:
      - _id: res_flags_usage
        _type: response
        status: 200
        body: |
          {"usage":{"ai_description_generation":123,"ai_bio_generation":45}}


